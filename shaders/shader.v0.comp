#version 430

layout(local_size_x=32,local_size_y=32) in;

uniform writeonly image2D color;
uniform ivec2 size;

const float h=0.001;

const ivec2 gid=ivec2(gl_GlobalInvocationID.xy);

const mat4 hB=h*mat4(.5,0.,0.,1./6.,
	0.,0.5,0.,1./3.,
	0.,0.,1.,1./3.,
	0.,0.,0.,1./6.);

const float energy=0.24;
const int maxsteps=1000000;


vec4 f(vec4 x){
	
	vec4 end=vec4(x.z,x.w,-x.x-2*x.x*x.y,-x.y-x.x*x.x+x.y*x.y);

	return end;
}

void main(){
	int steps=0;
	const vec2 delta=vec2(3./float(size.x),3./float(size.y));
	vec2 position= vec2(-1.5+gid.x * delta.x,-1.5+ gid.y * delta.y);
	float v2=2. * energy-position.x*position.x-position.y*position.y-2*position.x*position.x*position.y+
	(2./3.)*position.y*position.y*position.y;
	if(v2<0.){
		imageStore(color,gid,vec4(1.,1.,1.,1.));
		return;
	}

	float l=sqrt(position.x * position.x + position.y * position.y);
	vec4 x=vec4(position,vec2(-sqrt(v2) * position.y /l,sqrt(v2)*position.x/l));

	mat4 k=mat4(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.);
	k[0]=f(x);

	while(steps<maxsteps){
		k[1]=f(x+k*hB[0]);
		k[2]=f(x+k*hB[1]);
		k[3]=f(x+k*hB[2]);
		x=x+k*hB[3];
		if(x.y>1.5){
			imageStore(color,gid,vec4(0.,0.,1.,1.));
			return;
		}
		if(x.x<-1.5){
			imageStore(color,gid,vec4(0.,1.,0.,1.));
			return;
		}
		if(x.x>1.5){
			imageStore(color,gid,vec4(1.,0.,0.,1.));
			return;
		}
		k[0]=f(x);
		steps=steps+1;
	}
	imageStore(color,gid,vec4(1.,1.,1.,1.));
}
